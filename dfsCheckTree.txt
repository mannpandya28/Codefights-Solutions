//java
boolean dfsCheckTree(boolean[][] m) {
    class Helper {
        int l = 0;
        boolean hasCyc = false, vis[];
        Helper(int s) {
            vis = new boolean[s];
        }
        void dfs(int c, int k) {
            vis[c] = true;
            l++;
            for (int i = 0; i < m.length; i++) {
                if (m[c][i] && i != k) {
                    if (!vis[i]) dfs(i, c);
                    else hasCyc = true;
                }
            }
        }
    }
    Helper h = new Helper(m.length);
    h.dfs(0, -1);
    return h.l == m.length && !h.hasCyc;
}
